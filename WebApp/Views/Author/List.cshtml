@model List<AuthorViewModel>

<link href="/css/NonPrimaryEntities.css" rel="stylesheet">

<h1>Authors</h1>

<form method="get" asp-action="List">
    <div class="input-group mb-3">
        <input type="text" name="searchString" class="form-control" id="searchInput" placeholder="Search by name..." value="@ViewData["CurrentFilter"]"/>
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>

@if (Model != null && Model.Any())
{
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Select</th>
            <th scope="col">ID</th>
            <th scope="col">Name</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var author in Model)
        {
            <tr>
                <td>
                    <form method="post" asp-action="DeleteSelectedAuthors" id="deleteForm">
                        <input type="checkbox" name="authorIds" value="@author.IdAuthor"/>

                    </form>
                </td>
                <td>@author.IdAuthor</td>
                <td>
                    <form method="post" action="@Url.Action("Edit", "Author")" id="editForm-@author.IdAuthor">
                        <input type="hidden" name="IdAuthor" value="@author.IdAuthor"/>
                        <div class="form-group mb-2 mr-2">
                            <input type="text" class="form-control" name="AuthorName" value="@author.AuthorName" style="width: 300px"/>
                            <button type="button" class="btn btn-success mb-2" data-bs-toggle="modal" data-bs-target="#editModal-@author.IdAuthor">Update</button>
                        </div>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmModal">Delete Selected Authors</button>
    <button type="button" class="btn btn-primary" id="addAuthorButton">+</button>
}
else
{
    <p>No authors found.</p>
}

<form method="post" action="@Url.Action("Create", "Author")" id="newAuthorForm" style="display: none;">
    <div class="form-group mb-2">
        <input type="text" class="form-control" id="newAuthorName" name="newAuthorName" placeholder="Enter author name" style="width: 300px"/>
        <button type="submit" class="btn btn-primary mb-2" id="createAuthorButton">Create</button>
    </div>
</form>

@foreach (var author in Model ?? new List<AuthorViewModel>())
{
    <div class="modal fade" id="editModal-@author.IdAuthor" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Confirm Update</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to update this author?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary confirmEditButton" data-author-id="@author.IdAuthor">Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the selected authors?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
    const forms = document.querySelectorAll('form');
    console.log(forms);
    
        document.getElementById('confirmDeleteButton').addEventListener('click', function () {
            document.getElementById('deleteForm').submit();
        });

        document.querySelectorAll('.confirmEditButton').forEach(button => {
            button.addEventListener('click', function () {
                const authorId = this.getAttribute('data-author-id');
                const form = document.getElementById(`editForm-${authorId}`);
                if (form) {
                    form.submit();
                } else {
                    console.error(`Form with ID editForm-${authorId} not found`);
                }
            });
        });

        document.getElementById('addAuthorButton').addEventListener('click', function () {
            document.getElementById('newAuthorForm').style.display = 'block';
        });

        document.getElementById('newAuthorForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const name = this[0].value;
            if (name) {
                fetch('@Url.Action("Create", "Author")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ authorName: name, idAuthor: 0 })
                })
                .then(response => response.text())
                .then(text => {
                    console.log(text);
                    if (text.includes('Success')) {
                        location.reload();
                    } else {
                        alert('Error creating author: ' + text);
                    }
                })
                .catch(error => console.error('Error:', error));
            } else {
                alert('Author name cannot be empty');
            }
        });
    </script>
}