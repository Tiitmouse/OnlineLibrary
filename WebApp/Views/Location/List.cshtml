@model List<LocationViewModel>

<link href="/css/NonPrimaryEntities.css" rel="stylesheet">

<h1>Locations</h1>

<form method="get" asp-action="List">
    <div class="input-group mb-3">
        <input type="text" name="searchString" class="form-control" id="searchInput" placeholder="Search by title..." value="@ViewData["CurrentFilter"]"/>
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>
@if (Model != null && Model.Any())
{
<form method="post" asp-action="DeleteSelectedLocations" id="deleteForm">
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Select</th>
            <th scope="col">ID</th>
            <th scope="col">Library</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var location in Model)
        {
            <tr>
                <td>
                    <input type="checkbox" name="locationIds" value="@location.IdLocation"/>
                </td>
                <td>@location.IdLocation</td>
                <td>
                    <form method="post" action="@Url.Action("Edit", "Location")" id="editForm-@location.IdLocation">
                        <input type="hidden" name="IdLocation" value="@location.IdLocation"/>
                        <div class="form-group mb-2 mr-2">
                            <input type="text" class="form-control" name="LocationName" value="@location.LocationName" style="width: 300px"/>
                            <input type="text" class="form-control" name="Address" value="@location.Address" style="width: 300px"/>
                            <button type="button" class="btn btn-success mb-2" data-bs-toggle="modal" data-bs-target="#editModal-@location.IdLocation">Update</button>
                            <button type="button" class="btn btn-outline-dark mb-1" onclick="location.href='@Url.Action("Details", "Location", new { locationId = location.IdLocation })'"> Reservations </button>
                        </div>
                    </form>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmModal">Delete Selected Locations</button>
    <button type="button" class="btn btn-primary" id="addLocationButton">+</button>
</form>

<form method="post" action="@Url.Action("Create", "Location")" id="newLocationForm" style="display: none;">
    <div class="form-group mb-2">
        <input type="text" class="form-control" id="newLocationName" name="newLocationName" placeholder="Enter location name" style="width: 300px"/>
        <input type="text" class="form-control" id="newLocationAddress" name="newLocationAddress" placeholder="Enter location address" style="width: 300px"/>
        <button type="submit" class="btn btn-primary mb-2" id="createLocationButton">Create</button>
    </div>
</form>
}
else
{
    <p>No loacations found.</p>
}
@foreach (var location in Model)
{
    <div class="modal fade" id="editModal-@location.IdLocation" tabindex="-1" aria-labelledby="editModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editModalLabel">Confirm Update</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Are you sure you want to update this location?
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary confirmEditButton" data-location-id="@location.IdLocation">Confirm</button>
                </div>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the selected locations?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('confirmDeleteButton').addEventListener('click', function () {
            document.getElementById('deleteForm').submit();
        });

        document.querySelectorAll('.confirmEditButton').forEach(button => {
            button.addEventListener('click', function () {
                const locationId = this.getAttribute('data-location-id');
                document.getElementById(`editForm-${locationId}`).submit();
            });
        });

        document.getElementById('addLocationButton').addEventListener('click', function () {
            document.getElementById('newLocationForm').style.display = 'block';
        });

        document.getElementById('newLocationForm').addEventListener('submit', function (event) {
            event.preventDefault();
            const name = this[0].value;
            const laddress = this[1].value;
            if (name) {
                fetch('@Url.Action("Create", "Location")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ locationName: name, address: laddress, idGenre: 0 })
                })
                .then(response => response.text())
                .then(text => {
                    console.log(text);
                    if (text.includes('Success')) {
                        location.reload();
                    } else {
                        alert('Error creating location: ' + text);
                    }
                })
                .catch(error => console.error('Error:', error));
            } else {
                alert('Values cannot be empty');
            }
        });
    </script>
    <script>
        const placeholders = ["Search by library...", "Search by address..."];
        let index = 0;
        const searchInput = document.getElementById("searchInput");

        setInterval(() => {
            searchInput.placeholder = placeholders[index];
            index = (index + 1) % placeholders.length;
        }, 2000);
    </script>
}