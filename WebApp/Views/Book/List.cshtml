@model List<BookViewModel>

<link href="/css/bookList.css" rel="stylesheet">

<h1>Books</h1>

<form method="get" asp-action="List" id="searchForm">
    <div class="input-group mb-3">
        <input type="text" name="searchString" class="form-control" id="searchInput" placeholder="Search by title..." value="@ViewData["CurrentFilter"]" />
        <div class="input-group-append">
            <button type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</form>

<div class="pagination-controls">
    <label class="pagination-item" for="pageSizeSelect">Books per page:</label>
    <select id="pageSizeSelect" class="form-control pagination-item" style="width: auto; display: inline-block;">
        <option value="10">10</option>
        <option value="25">25</option>
        <option value="50">50</option>
    </select>
    <button id="prevPage" class="btn btn-secondary navArrow pagination-item">&#10094;</button>
    <span id="pageInfo" class="pagination-item"></span>
    <button id="nextPage" class="btn btn-secondary navArrow pagination-item">&#10095;</button>
</div>

<form method="post" asp-action="DeleteSelectedBooks" id="deleteForm">
    <table class="table">
        <thead>
        <tr>
            <th scope="col">Select</th>
            <th scope="col">ID</th>
            <th scope="col">Title</th>
            <th scope="col">Author</th>
            <th scope="col">Genre</th>
            <th scope="col">ISBN</th>
            <th scope="col">Publication</th>
            <th scope="col"></th>
        </tr>
        </thead>
        <tbody id="bookTableBody">
        @foreach (var book in Model)
        {
            <tr>
                <td><input type="checkbox" name="bookIds" value="@book.IdBook" /></td>
                <td>@book.IdBook</td>
                <td>@book.Title</td>
                <td>@book.AuthorName</td>
                <td>@book.GenreName</td>
                <td>@book.Isbn</td>
                <td>@book.PublicationYear</td>
                <td>
                    <a href="@Url.Action("Details", "Book", new {id = @book.IdBook})" class="btn btn-outline-dark">See Details</a>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#confirmModal">Delete Selected Books</button>
</form>

    <a href="@Url.Action("Create", "Book")" class="btn btn-success">Create new book</a>

<div class="modal fade" id="confirmModal" tabindex="-1" aria-labelledby="confirmModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="confirmModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete the selected books?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Confirm</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const placeholders = ["Search by title...", "Search by author...", "Search by genre..."];
        let index = 0;
        const searchInput = document.getElementById("searchInput");

        setInterval(() => {
            searchInput.placeholder = placeholders[index];
            index = (index + 1) % placeholders.length;
        }, 2000);

        $(document).ready(function() {
            let currentPage = 1;
            let booksPerPage = 10;

            function fetchBooks(page, perPage) {
                const searchString = $('#searchInput').val();
                $.ajax({
                    url: '/Book/List',
                    type: 'GET',
                    data: {
                        searchString: searchString,
                        pageNumber: page,
                        pageSize: perPage
                    },
                    success: function(data) {
                        $('#bookTableBody').html($(data).find('#bookTableBody').html());
                        updatePagination(page, perPage);
                    },
                    error: function() {
                        alert('Failed to fetch books');
                    }
                });
            }

            function updatePagination(page, perPage) {
                $('#pageInfo').text(`${page}`);
                $('#prevPage').prop('disabled', page === 1);
                $('#nextPage').prop('disabled', $('#bookTableBody tr').length < perPage);
            }

            $('#pageSizeSelect').change(function() {
                booksPerPage = $(this).val();
                currentPage = 1;
                fetchBooks(currentPage, booksPerPage);
            });

            $('#searchForm').submit(function(e) {
                e.preventDefault();
                fetchBooks(1, booksPerPage);
            });

            $('#prevPage').click(function() {
                if (currentPage > 1) {
                    currentPage--;
                    fetchBooks(currentPage, booksPerPage);
                }
            });

            $('#nextPage').click(function() {
                currentPage++;
                fetchBooks(currentPage, booksPerPage);
            });

            fetchBooks(currentPage, booksPerPage);
        });

        document.getElementById('confirmDeleteButton').addEventListener('click', function () {
            document.getElementById('deleteForm').submit();
        });
    </script>
}